name: Test

on:
  push:
  workflow_dispatch:
  pull_request:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}

jobs:
  test:
    strategy:
      fail-fast: false
      matrix:
        os:
          - windows-11-arm
          - windows-latest
          - ubuntu-latest
          - macOS-latest
        rust_toolchain:
          - stable
          - nightly
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - uses: hecrj/setup-rust-action@v2
        with:
          rust-version: ${{ matrix.rust_toolchain }}
      - uses: baptiste0928/cargo-install@v3
        with:
          crate: cargo-llvm-cov

      - name: Generate code coverage
        run: cargo llvm-cov test --all-features --workspace --lcov --output-path lcov.info

      - name: Build
        run: cargo build --verbose

      - name: Coveralls
        if: matrix.os == 'ubuntu-latest' && matrix.rust_toolchain == 'nightly'
        uses: coverallsapp/github-action@v2.1.0

  build-image:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/github-script@v7
        id: set-tag-name
        with:
          script: return '${{ github.ref_name }}'.toLowerCase().replaceAll(/[/.]/g, '-').trim('-')
          result-encoding: string
      - name: Get result
        run: echo "${{steps.set-tag-name.outputs.result}}"
      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ startsWith(github.ref, 'refs/tags/v') }}
          provenance: false
          tags: |
            ${{ env.IMAGE_NAME }}:${{ steps.set-tag-name.outputs.result }}
